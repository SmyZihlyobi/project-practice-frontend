name: Frontend Deployment Pipeline

on:
  push:
    branches: [ "kubernetis" ]
  pull_request:
    branches: [ "kubernetis" ]

permissions:
  contents: read
  actions: read
  packages: read

env:
  HELM_CHART_PATH: ./charts/frontend-helm
  CLUSTER_NAMESPACE: frontend-prod
  REGISTRY: ghcr.io/${{ github.repository }}

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Kubernetes context
        env:
          KUBECONFIG_STAGING: ${{ secrets.KUBECONFIG_STAGING }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG_STAGING" | base64 -d > ~/.kube/config
          kubectl config use-context staging-context

      - name: Verify cluster access
        run: kubectl cluster-info

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.14.0'

      - name: Lint Helm Chart
        run: |
          helm lint $HELM_CHART_PATH \
            --strict \
            --set image.tag=test \
            --set ingress.enabled=false

      - name: Dry-run Installation
        run: |
          helm install frontend-test $HELM_CHART_PATH \
            --dry-run \
            --namespace $CLUSTER_NAMESPACE \
            --set image.tag=test \
            --set service.type=ClusterIP

  deploy-staging:
    needs: lint-test
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Kubernetes Tools
        uses: imranismail/setup-k8s@v1
        with:
          helm: 3.14.0
          kubectl: 1.29.0

      - name: Configure K8s Context
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.STAGING_KUBECONFIG }}

      - name: Deploy to Staging
        run: |
          helm upgrade --install frontend $HELM_CHART_PATH \
            --namespace $CLUSTER_NAMESPACE \
            --set image.tag=${{ github.sha }} \
            --set ingress.enabled=false \
            --set service.type=NodePort

      - name: Post-deployment Test
        run: |
          kubectl rollout status deployment/frontend -n $CLUSTER_NAMESPACE
          kubectl get pods -n $CLUSTER_NAMESPACE -l app.kubernetes.io/instance=frontend

#  deploy-prod:
#    needs: deploy-staging
#    runs-on: ubuntu-latest
#    environment: production
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v4

#      - name: Setup Kubernetes Tools
#        uses: imranismail/setup-k8s@v1
#        with:
#          helm: 3.14.0
#          kubectl: 1.29.0

#      - name: Configure K8s Context
#        uses: azure/k8s-set-context@v3
#        with:
#          method: kubeconfig
#          kubeconfig: ${{ secrets.PROD_KUBECONFIG }}

#      - name: Deploy to Production
#        run: |
#          helm upgrade --install frontend $HELM_CHART_PATH \
#            --namespace $CLUSTER_NAMESPACE \
#            --set image.tag=${{ github.sha }} \
#            --set ingress.hosts[0].host=ivanmalks.online \
#            --atomic \
#            --timeout 10m \
#            --wait

#      - name: Smoke Test
#        run: |
#          SVC_URL=$(kubectl get ingress frontend -n $CLUSTER_NAMESPACE \
#            -o jsonpath='{.spec.rules[0].host}')
#          curl -sSI https://$SVC_URL | grep 'HTTP/2 200'
