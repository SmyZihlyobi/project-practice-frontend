name: Frontend Deployment Pipeline

on:
  push:
    branches: [ "kubernetis" ]
  pull_request:
    branches: [ "kubernetis" ]

permissions:
  contents: read
  actions: read
  packages: read

env:
  HELM_CHART_PATH: ./charts/frontend-helm
  CLUSTER_NAMESPACE: frontend-prod
  REGISTRY: ghcr.io/${{ github.repository }}

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create KinD Cluster
        uses: helm/kind-action@v1
        with:
          version: 'v0.24.0'
          config: '.github/kind-config.yaml'

      - name: Verify cluster access
        run: kubectl cluster-info

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.14.0'

      - name: Lint Helm Chart
        run: |
          helm lint $HELM_CHART_PATH \
            --strict \
            --set image.tag=test
#            --set ingress.enabled=false

      - name: Dry-run Installation
        run: |
          helm install frontend-test $HELM_CHART_PATH \
            --dry-run \
            --namespace $CLUSTER_NAMESPACE \
            --set image.tag=test
#            --set service.type=ClusterIP

  deploy-staging:
    needs: lint-test
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create KinD Cluster
        uses: helm/kind-action@v1

      - name: Verify cluster access
        run: kubectl cluster-info

      - name: Create Namespace
        run: kubectl create namespace $CLUSTER_NAMESPACE

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.14.0'

      - name: Create image pull secret
        run: |
          kubectl create secret docker-registry ghcr-secret \
            --docker-server=ghcr.io \
            --docker-username=${{ github.actor }} \
            --docker-password=${{ secrets.GITHUB_TOKEN }} \
            -n ${{ env.CLUSTER_NAMESPACE }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container
          buildkitd-config-inline: |
            [worker.oci]
              max-parallelism = 4
      
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Deploy to Staging
        run: |
          helm upgrade --install frontend $HELM_CHART_PATH \
            --namespace $CLUSTER_NAMESPACE \
            --set image.tag=${{ github.sha }} \
            --set service.type=NodePort
#            --set ingress.enabled=false \

      - name: Post-deployment Test 2
        run: |
          echo "=== Pods ==="
          kubectl get pods -n $CLUSTER_NAMESPACE -o wide
          
          echo "=== Events ==="
          kubectl get events -n $CLUSTER_NAMESPACE --sort-by=.metadata.creationTimestamp
          
          echo "=== Deployment Describe ==="
          kubectl describe deployment/frontend -n $CLUSTER_NAMESPACE
          
          echo "=== Pod Logs ==="
          kubectl logs -n $CLUSTER_NAMESPACE -l app.kubernetes.io/instance=frontend --tail=50

      - name: Post-deployment Test 1
        run: |
          kubectl rollout status deployment/frontend -n $CLUSTER_NAMESPACE
          kubectl get pods -n $CLUSTER_NAMESPACE -o wide
          kubectl describe deployment/frontend -n $CLUSTER_NAMESPACE
#          kubectl get pods -n $CLUSTER_NAMESPACE -l app.kubernetes.io/instance=frontend

#  deploy-prod:
#    needs: deploy-staging
#    runs-on: ubuntu-latest
#    environment: production
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v4

#      - name: Setup Kubernetes Tools
#        uses: imranismail/setup-k8s@v1
#        with:
#          helm: 3.14.0
#          kubectl: 1.29.0

#      - name: Configure K8s Context
#        uses: azure/k8s-set-context@v3
#        with:
#          method: kubeconfig
#          kubeconfig: ${{ secrets.PROD_KUBECONFIG }}

#      - name: Deploy to Production
#        run: |
#          helm upgrade --install frontend $HELM_CHART_PATH \
#            --namespace $CLUSTER_NAMESPACE \
#            --set image.tag=${{ github.sha }} \
#            --set ingress.hosts[0].host=ivanmalks.online \
#            --atomic \
#            --timeout 10m \
#            --wait

#      - name: Smoke Test
#        run: |
#          SVC_URL=$(kubectl get ingress frontend -n $CLUSTER_NAMESPACE \
#            -o jsonpath='{.spec.rules[0].host}')
#          curl -sSI https://$SVC_URL | grep 'HTTP/2 200'
